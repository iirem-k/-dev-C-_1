{\rtf1\ansi\ansicpg1254\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 .SFNS-Regular_wdth_opsz110000_GRAD_wght2580000;\f1\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue0;\red0\green0\blue0;
}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\csgray\c0\c0;\cssrgb\c0\c0\c0\c80000;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid1\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid101\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid102\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh10640\viewkind0
\deftab720
\pard\pardeftab720\sa320\partightenfactor0

\f0\b\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
Abstract Class (Soyut S\uc0\u305 n\u305 f): 
\f1\b0 \cf2 nesne y\'f6nelimli programlama dillerinde) bir s\uc0\u305 n\u305 f t\'fcr\'fcd\'fcr. Soyut s\u305 n\u305 flar, do\u287 rudan \'f6rneklendirilemeyen ve yaln\u305 zca alt s\u305 n\u305 flar taraf\u305 ndan geni\u351 letilmek amac\u305 yla tan\u305 mlanan s\u305 n\u305 flard\u305 r.Ba\u351 l\u305 ca \'f6zellikleri \u351 unlard\u305 r\
Soyut metotlar: Soyut s\uc0\u305 n\u305 flar en az bir tane soyut metoda sahip olabilirler. Soyut metot, g\'f6vdesi olmayan ve yaln\u305 zca ad\u305 n\u305  i\'e7eren bir metottur. Alt s\u305 n\u305 flar bu soyut metotlar\u305  implement etmek zorundad\u305 r.\
Normal metotlar: Soyut s\uc0\u305 n\u305 flar normal metotlar\u305  da i\'e7erebilir. Alt s\u305 n\u305 flar bu normal metotlar\u305  do\u287 rudan kullanabilir veya gerekti\u287 inde ge\'e7ersiz k\u305 labilir.\
\pard\pardeftab720\sa320\partightenfactor0

\f0\b \cf4 Abstraction (Soyutlama)
\f1\b0 , nesne y\'f6nelimli programlaman\uc0\u305 n temel prensiplerinden biridir ve karma\u351 \u305 k sistemlerin basitle\u351 tirilmesi i\'e7in kullan\u305 l\u305 r. Soyutlama, belirli bir nesnenin veya sistemin sadece \'f6nemli \'f6zelliklerinin ve davran\u305 \u351 lar\u305 n\u305 n vurgulanmas\u305 n\u305  ve gereksiz detaylar\u305 n gizlenmesini sa\u287 lar. Bu kavram, kullan\u305 c\u305 lar\u305 n ve geli\u351 tiricilerin sadece gerekli bilgilere odaklanmalar\u305 n\u305  sa\u287 lar.\
Abstraction: karma\uc0\u351 \u305 kl\u305 \u287 \u305  azaltmak, kodun yeniden kullan\u305 labilirli\u287 ini sa\u287 lamak i\'e7in kullan\u305 l\u305 r\
Abstaction genellikle iki \uc0\u351 ekilde ger\'e7ekle\u351 ir;\
1. Soyut s\uc0\u305 n\u305 flar(abstract classes):\
2.aray\'fczler(interfaces); aray\'fczler tamamen soyut metotlar\uc0\u305  i\'e7eren ve s\u305 n\u305 flar\u305 n uygulamas\u305  gereken bir s\'f6zle\u351 me sunan yap\u305 lar olarak kullan\u305 l\u305 r.Bir s\u305 n\u305 f\u305 n birden fazla aray\'fcz\'fc bulunabilir.\
Polimorfizm (\'c7ok bi\'e7imlilik): nesne y\'f6nelimli programlamada \'f6nemli bir kavramd\uc0\u305 r ve bir nesnenin veya metodun farkl\u305  t\'fcrlerdeki nesnelerle etkile\u351 im kurabilme yetene\u287 ini ifade eder. Polimorfizm, genellikle iki ana t\'fcre ayr\u305 l\u305 r: 
\f0\b metot a\uc0\u351 \u305 r\u305  y\'fckleme (overloading)
\f1\b0  ve 
\f0\b metot ge\'e7ersiz k\uc0\u305 lma (overriding)
\f1\b0 .\
\pard\pardeftab720\partightenfactor0

\f0\b \cf4 Metot A\uc0\u351 \u305 r\u305  Y\'fckleme (Overloading)
\f1\b0 :\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf4 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
Ayn\uc0\u305  isimli birden fazla metot tan\u305 mlanmas\u305 n\u305  sa\u287 lar, ancak bu metotlar farkl\u305  parametre say\u305 s\u305 na veya parametre t\'fcr\'fcne sahip olmal\u305 d\u305 r. Bu, bir metot isminin farkl\u305  bi\'e7imlerde kullan\u305 lmas\u305 na olanak tan\u305 r.\
\pard\tx720\pardeftab720\partightenfactor0
\cf4 \cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0
\f0\b \cf4 \cb3 Metot Ge\'e7ersiz K\uc0\u305 lma (Overriding)
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls2\ilvl1\cf4 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
Bir alt s\uc0\u305 n\u305 f, \'fcst s\u305 n\u305 f\u305 nda tan\u305 ml\u305  bir metodu yeniden tan\u305 mlamak i\'e7in kullan\u305 l\u305 r. Bu, alt s\u305 n\u305 f\u305 n \'fcst s\u305 n\u305 f\u305 n metodunu \'f6zelle\u351 tirmesine olanak tan\u305 r. Ge\'e7ersiz k\u305 lma i\u351 leminde metot ad\u305 , d\'f6n\'fc\u351  t\'fcr\'fc ve parametre listesi \'fcst s\u305 n\u305 f ile ayn\u305  olmal\u305 d\u305 r.\
\pard\pardeftab720\sa320\partightenfactor0
\cf4 \
Polimorfizm; program\uc0\u305 n esnekli\u287 ini artt\u305 r\u305 r. Farkl\u305  nesnelerle ayn\u305  aray\'fcz\'fc kullanarak i\u351 lem yapabilmek, kodun daha dinamik olmas\u305 n\u305  sa\u287 lar.\
Var olan kodlar\uc0\u305  farkl\u305  t\'fcrlerdeki nesnelerle kullanarak, daha fazla kod yazmadan tekrar kullanmay\u305  sa\u287 lar.\
Kodun bak\uc0\u305 m\u305 n\u305  ve g\'fcncelle\u351 tirmesini sa\u287 lar ve kolayla\u351 t\u305 r\u305 r.  \
\
}